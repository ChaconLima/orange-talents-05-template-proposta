global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9090']
  
  - job_name: 'proposta-docker-prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ['host.docker.internal:8080']

    oauth2:
      client_id: 'app-proposta-prometheus'
      client_secret: '353bbdab-2a04-4f90-b4d0-3decadf13ec3'
      scopes:
        - 'profile'
      token_url: "http://host.docker.internal:18080/auth/realms/proposta/protocol/openid-connect/token"
      endpoint_params:

  - job_name: 'proposta-prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    metrics_path: "/actuator/prometheus"
    static_configs:
      - targets: ['host.docker.internal:8081']

    oauth2:
      client_id: 'app-proposta-prometheus'
      client_secret: '353bbdab-2a04-4f90-b4d0-3decadf13ec3'
      scopes:
        - 'profile'
      token_url: "http://host.docker.internal:18080/auth/realms/proposta/protocol/openid-connect/token"
      endpoint_params: