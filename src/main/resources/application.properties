server.port=${APP_PORT:8081}
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=${CONTAINER_DATABASE_URL:jdbc:mysql://localhost:3307/container_sql?useSSL=false}
spring.datasource.username=${CONTAINER_DATABASE_USERNAME:mysql}
spring.datasource.password=${CONTAINER_DATABASE_PASSWORD:3367}


spring.jpa.hibernate.ddl-auto=update
##spring.jpa.properties.hibernate.show_sql=true
##spring.jpa.properties.hibernate.format_sql=true

##Spring cloud
spring.cloud.config.enabled=false
##spring.cloud.config.import-check.enabled=false



# actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
#management.endpoint.health.status.http-mapping.down=503
#management.endpoint.health.status.http-mapping.fatal=503
#management.endpoint.health.status.http-mapping.out-of-service=503

#docker
analise=${HOST_API_ANALISE:http://localhost:9999/api}
contas=${HOST_API_CONTAS:http://localhost:8888/api}


#auth2
spring.security.oauth2.resourceserver.jwt.issuer-uri=${HOST_KEYCLOAK_CLIENT:http://host.docker.internal:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${HOST_KEYCLOAK_CERTIFICADO:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}
logging.level.org.springframework.security=DEBUG

# Jaeger 
#  Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Nome do serviço
opentracing.jaeger.service-name=${JAEGER_NAME:proposta}
#Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
#Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}